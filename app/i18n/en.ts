export default {
  languages: {
    pl: 'Polish',
    en: 'English',
  },
  header: {
    search: 'Search',
    actions: 'Actions',
  },
  routes: {
    ProfileDefault: 'Profile',
    ProfileData: 'Data',
    GlobalStore: 'Store',
    Settings: 'Settings',
    ServicesDefault: 'Services',
    Home: 'Home',
  },
  services: {
    data: 'Data',
    information: 'Credentials',
    dataPaths: 'Data paths',
  },
  labels: {
    id: 'ID',
    name: 'Name',
    logoIcon: 'Icon',
    importantColor: 'Main color',
    clientId: 'Client ID',
    clientSecret: 'Client secret',
    authorizationUri: 'Authorization URL',
    redirectUri: 'Redirect URL',
    tokenEndpointUri: 'Token endpoint URL',
    scope: 'Scope',
  },
  form: {
    clear: 'Clear',
    submit: 'Submit',
    enable: 'Enable',
    disable: 'Disable',
    enabledOption: 'Enabled: {option}',
    disabledOption: 'Disabled: {option}',
    useBuiltin: 'Use builtin services',
    vaultName: 'Vault name',
    password: 'Password',
    repeatPassword: 'Repeat password',
  },
  validations: {
    required: 'The field {property} is required.',
    minLength:
      "The field has a value of '{model}', but it must have a min length of {min}.",
    maxLength:
      "The field has a value of '{model}', but it must have a max length of {max}.",
    sameAs: 'The value must be equal to the {equalTo} value.',
  },
  popup: {
    receivedData: {
      title: 'Receiving data',
      success: 'Successfully received data!',
      error: 'Data request error!',
      errorNamed: 'Data request error - {name}!',
    },
    findTokens: {
      title: 'Tokens',
      success: 'Tokens found!',
      error: 'Could not find tokens!',
      errorNamed: 'Could not find tokens for for {name}!',
    },
    requestt: {
      title: 'Requesting tokens',
      success: 'Successfully requested tokens!',
      error: 'Error while requesting tokens!',
      errorNamed: 'Error while requesting tokens for {name}!',
    },
    authenticateUri: {
      title: 'Generating authentication URL',
      success: 'Successfully generated authentication URL!',
      error: 'Failed to generate authentication URL!',
      errorNamed: 'Failed to generate authentication URL for {name}!',
    },
  },
  actions: {
    refresh: 'Refresh',
    save: 'Save',
    open: 'Open',
    add: 'Add',
    createNew: 'Create new',
    selectFile: 'Select file',
    selectDir: 'Select directory',
    delete: 'Delete',
    edit: 'Edit',
    logout: 'Logout',
    enabled: 'Enabled',
    disabled: 'Disabled',
    enabledService: 'Enabled service',
    disabledService: 'Disabled service',
    authenticate: 'Authenticate',
    requestTokens: 'Request tokens',
    requestData: 'Request data',
    changeTheme: 'Change theme',
    changeLanguage: 'Change language',
    clearStore: 'Clear store',
  },
};
